name: "Donet Pack"

on:
  workflow_dispatch:
  push:
  release:
    types: [released, prereleased]

jobs:
  build-it:
    name: Build .NET Repository
    if: github.event.repository.is_template == false
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{github.token}}
      GH_REPO_URL: https://github.com/${{github.repository}}
      GH_REPO_GIT_URL: ${{github.repositoryUrl}}
      GH_REPO_DEFAULT_BRANCH: ${{github.event.repository.default_branch}}
    
    outputs:
      NUPKG_AVAILABLE: ${{steps.files.outputs.NUPKG}}
      TSPKG_AVAILABLE: ${{steps.files.outputs.TSPKG}}
      NMPKG_AVAILABLE: ${{steps.files.outputs.NMPKG}}

    steps:
      - name: Full Repository Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-tags: true
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Build & Package
        id: run
        run: |
          dotnet pack --configuration Release | tee output.log
          last_line=$(tail -n 1 output.log | sed 's/^[   ]*//;s/[    ]*$//')
          echo "PKGS=$last_line" >> $GITHUB_OUTPUT
          if [ -d "$last_line/NUPKG/" ]; then
            echo "NUPKG='true'" >> $GITHUB_OUTPUT
          else
            echo "NUPKG directory not found"
          fi
          if [ -d "$last_line/TSPKG/" ]; then
            echo "TSPKG='true'" >> $GITHUB_OUTPUT
          else
            echo "TSPKG directory not found"
          fi
          if [ -d "$last_line/NMPKG/" ]; then
            echo "NMPKG='true'" >> $GITHUB_OUTPUT
          else
            echo "NMPKG directory not found"
          fi

      - uses: actions/upload-artifact@v4
        if: ${{steps.run.outputs.NUPKG == 'true'}}
        with:
          name: NUPKG
          path: ${{steps.run.outputs.PKGS}}/NUPKG

      - uses: actions/upload-artifact@v4
        if: ${{steps.run.outputs.TSPKG == 'true'}}
        with:
          name: TSPKG
          path: ${{steps.run.outputs.PKGS}}/TSPKG

      - uses: actions/upload-artifact@v4
        if: ${{steps.run.outputs.NMPKG == 'true'}}
        with:
          name: NMPKG
          path: ${{steps.run.outputs.PKGS}}/NMPKG
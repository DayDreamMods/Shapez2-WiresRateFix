name: "Donet Pack"

on:
  workflow_dispatch:
  push:
  release:
    types: [released, prereleased]

jobs:
  build-it:
    name: Build .NET Repository
    if: github.event.repository.is_template == false
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{github.token}}
      GH_REPO_URL: https://github.com/${{github.repository}}
      GH_REPO_GIT_URL: ${{github.repositoryUrl}}
      GH_REPO_DEFAULT_BRANCH: ${{github.event.repository.default_branch}}
    
    outputs:
      NUPKG_AVAILABLE: ${{steps.files.outputs.NUPKG}}
      TSPKG_AVAILABLE: ${{steps.files.outputs.TSPKG}}
      NMPKG_AVAILABLE: ${{steps.files.outputs.NMPKG}}

    steps:
      - name: Full Repository Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-tags: true
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Build & Package
        id: run
        run: |
          dotnet pack --configuration Release | tee output.log
          last_line=$(tail -n 1 output.log)
          echo "last_line=$last_line" >> $GITHUB_OUTPUT
      - name: Format Build Output
        id: files
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_PAT }}
          script: |
            const fs = require('fs');
            var pkgs = "${{steps.run.outputs.last_line}}";
            core.setOutput("NUPKG", fs.existsSync(pkgs + "/NUPKG"))
            core.setOutput("TSPKG", fs.existsSync(pkgs + "/TSPKG"))
            core.setOutput("NMPKG", fs.existsSync(pkgs + "/NMPKG"))
            core.setOutput("PKGS", pkgs)

      - uses: actions/upload-artifact@v4
        if: ${{steps.files.outputs.NUPKG}}
        with:
          name: NUPKG
          path: ${{steps.files.outputs.PKGS}}/NUPKG

      - uses: actions/upload-artifact@v4
        if: ${{steps.files.outputs.TSPKG}}
        with:
          name: TSPKG
          path: ${{steps.files.outputs.PKGS}}/TSPKG

      - uses: actions/upload-artifact@v4
        if: ${{steps.files.outputs.NMPKG}}
        with:
          name: NMPKG
          path: ${{steps.files.outputs.PKGS}}/NMPKG
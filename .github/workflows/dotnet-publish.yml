name: "Donet Publish"

on:
  workflow_dispatch:
  release:
    types: [released, prereleased]

jobs:
  publish-it:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{secrets.ORG_PAT}}
    steps:
      - name: Full Repository Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-tags: true
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Build & Package
        id: run
        run: |
          dotnet pack --configuration Release | tee output.log
          last_line=$(tail -n 1 output.log)
          echo "last_line=$last_line" >> $GITHUB_OUTPUT
      - name: Format Build Output
        id: files
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_PAT }}
          script: |
            var pkgs = ("${{steps.run.outputs.last_line}}").trim().split(';');
            if (pkgs.length >= 1) {
              core.setOutput('NUPKG', pkgs[0]);
            }
            if (pkgs.length >= 2) {
              core.setOutput('TSPKG', pkgs[1]);
            }
            if (pkgs.length >= 3) {
              core.setOutput('TOML', pkgs[2]);
            }

      - name: Github Nupkg Upload 
        run: |
          dotnet nuget add source --username ${{github.repository_owner}} --password $GH_TOKEN --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{github.repository_owner}}/index.json"
          dotnet nuget push "${{steps.files.outputs.NUPKG}}" --api-key $GH_TOKEN --source "github"
      
      - name: Upload Release Files
        if: ${{github.event_name == 'release'}}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ${{steps.files.outputs.TSPKG}} "${{steps.files.outputs.NUPKG}}"

      - name: Publishing to Thunderstore
        if: ${{github.event.release.prerelease == false}}
        env:
          TCLI_AUTH_TOKEN: ${{ secrets.TCLI_API_TOKEN }}
        run: |
          dotnet tcli publish --config-path "${{steps.files.outputs.TOML}}" --file "${{steps.files.outputs.TSPKG}}"
          
      